This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
assets/
  javascripts/
    discourse/
      thumbnail-toggle.js.es6
plugin.rb
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="assets/javascripts/discourse/thumbnail-toggle.js.es6">
import { withPluginApi } from "discourse/lib/plugin-api";

export default {
  name: "thumbnail-toggle",

  initialize() {
    console.log("[thumbnail-toggle] initializer loaded");

    withPluginApi("0.8.13", api => {
      const FIELD = "thumbnail_toggle_enabled";

      // Step 4：加一顆按鈕到 Topic Meta（🔧）下拉
      api.addTopicMenuButton("thumbnail-flag", attrs => {
        if (!attrs.currentUser?.staff) return;
        const on = attrs.topic.get(`custom_fields.${FIELD}`) === true;
        return {
          action: "toggleThumbnailFlag",
          icon: on ? "image" : "image-slash",
          label: on ? "隱藏縮圖" : "顯示縮圖",
        };
      });

      // Step 5：對應 controller:topic.action
      api.modifyClass("controller:topic", {
        pluginId: "thumbnail-toggle",
        actions: {
          toggleThumbnailFlag() {
            const topic = this.model;
            const current = topic.get(`custom_fields.${FIELD}`) === true;
            topic.set(`custom_fields.${FIELD}`, !current);
            topic
              .save({ custom_fields: topic.custom_fields })
              .then(() => this.appEvents.trigger("topic:custom-field-changed"));
          },
        },
      });
    });
  },
};
</file>

<file path="plugin.rb">
# frozen_string_literal: true
# name: thumbnail-toggle-control
# about: Adds a boolean flag to decide whether TLP shows thumbnail
# version: 0.1
# authors: Jeffrey

after_initialize do
  ##
  ## A. 註冊 custom field
  ##
  Topic.register_custom_field_type('thumbnail_toggle_enabled', :boolean)

  ##
  ## B. 追蹤 field 變動
  ##
  PostRevisor.track_topic_field(:thumbnail_toggle_enabled) do |tc, new_val|
    tc.topic.custom_fields['thumbnail_toggle_enabled'] = new_val
  end

  ##
  ## C. Patch TLP Sidecar 的 serializer
  ##    只有開關為 true 時才回傳原本的 thumbnail_url
  ##
  DiscourseEvent.on(:topic_previews_ready) do
    next unless defined?(::TopicPreviews::TopicListItemSerializerExtension)

    module ::TopicPreviews
      module ThumbTogglePatch
        def thumbnail_url
          return nil unless object.custom_fields['thumbnail_toggle_enabled'] == true
          super
        end
      end
    end

    ::TopicPreviews::TopicListItemSerializerExtension.prepend(
      ::TopicPreviews::ThumbTogglePatch
    )
    Rails.logger.info("[thumbnail-toggle-control] ThumbTogglePatch applied")
  end
end
</file>

</files>
